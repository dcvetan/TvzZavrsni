/*
 * This file is generated by jOOQ.
 */
package hr.tvz.financije.repositories.models.jooq.tables.records;


import hr.tvz.financije.repositories.models.jooq.tables.Record;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordRecord extends UpdatableRecordImpl<RecordRecord> implements Record7<Integer, Integer, String, LocalDate, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.record.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.record.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.record.amount</code>.
     */
    public void setAmount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.record.amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.record.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.record.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.record.record_date</code>.
     */
    public void setRecordDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.record.record_date</code>.
     */
    public LocalDate getRecordDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.record.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.record.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.record.account_id</code>.
     */
    public void setAccountId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.record.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.record.receiving_account_id</code>.
     */
    public void setReceivingAccountId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.record.receiving_account_id</code>.
     */
    public Integer getReceivingAccountId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, LocalDate, String, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, LocalDate, String, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Record.RECORD.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Record.RECORD.AMOUNT;
    }

    @Override
    public Field<String> field3() {
        return Record.RECORD.TYPE;
    }

    @Override
    public Field<LocalDate> field4() {
        return Record.RECORD.RECORD_DATE;
    }

    @Override
    public Field<String> field5() {
        return Record.RECORD.DESCRIPTION;
    }

    @Override
    public Field<Integer> field6() {
        return Record.RECORD.ACCOUNT_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Record.RECORD.RECEIVING_ACCOUNT_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getAmount();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public LocalDate component4() {
        return getRecordDate();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Integer component6() {
        return getAccountId();
    }

    @Override
    public Integer component7() {
        return getReceivingAccountId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getAmount();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public LocalDate value4() {
        return getRecordDate();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Integer value6() {
        return getAccountId();
    }

    @Override
    public Integer value7() {
        return getReceivingAccountId();
    }

    @Override
    public RecordRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RecordRecord value2(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public RecordRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public RecordRecord value4(LocalDate value) {
        setRecordDate(value);
        return this;
    }

    @Override
    public RecordRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public RecordRecord value6(Integer value) {
        setAccountId(value);
        return this;
    }

    @Override
    public RecordRecord value7(Integer value) {
        setReceivingAccountId(value);
        return this;
    }

    @Override
    public RecordRecord values(Integer value1, Integer value2, String value3, LocalDate value4, String value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecordRecord
     */
    public RecordRecord() {
        super(Record.RECORD);
    }

    /**
     * Create a detached, initialised RecordRecord
     */
    public RecordRecord(Integer id, Integer amount, String type, LocalDate recordDate, String description, Integer accountId, Integer receivingAccountId) {
        super(Record.RECORD);

        setId(id);
        setAmount(amount);
        setType(type);
        setRecordDate(recordDate);
        setDescription(description);
        setAccountId(accountId);
        setReceivingAccountId(receivingAccountId);
        resetChangedOnNotNull();
    }
}
